{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Galaxy Spring Day 2019 - Reference-based RNAseq analysis March 21st 2019 In this training session, we are going to perform a RNAseq analysis as first outlined in Galaxy training material for Reference-based RNAseq analysis We have updated the instructions given in this training material and put these instructions in this readthedoc site for the spring day 2019. We will propose the update for a pull request to the galaxyproject training-material repository In this tutorial, we will deal with: Pretreatments Data upload Quality control Mapping Mapping Inspection of the mapping results Analysis of the differential gene expression Count the number of reads per annotated gene Viewing datasets side by side using the Scratchbook Identification of the differentially expressed features Visualization of the differentially expressed genes Analysis of functional enrichment among the differentially expressed genes","title":"Home"},{"location":"#galaxy-spring-day-2019-reference-based-rnaseq-analysis","text":"","title":"Galaxy Spring Day 2019 - Reference-based RNAseq analysis"},{"location":"#march-21st-2019","text":"In this training session, we are going to perform a RNAseq analysis as first outlined in Galaxy training material for Reference-based RNAseq analysis We have updated the instructions given in this training material and put these instructions in this readthedoc site for the spring day 2019. We will propose the update for a pull request to the galaxyproject training-material repository In this tutorial, we will deal with: Pretreatments Data upload Quality control Mapping Mapping Inspection of the mapping results Analysis of the differential gene expression Count the number of reads per annotated gene Viewing datasets side by side using the Scratchbook Identification of the differentially expressed features Visualization of the differentially expressed genes Analysis of functional enrichment among the differentially expressed genes","title":"March 21st 2019"},{"location":"Cutadapt/","text":"Filtering datasets to remove or trim low quality sequences This step is optional and should be performed by 50% of attendees. Cutadapt with single reads Create a new history Cutapdapt ( wheel -- Create New ) Copy the fastq files from the RNAseq data library to this new history ( wheel -- Copy datasets ) Select the Cutadapt tool Start with selecting Single-end in the Single-end or Paired-end reads? menu Select the multiple datasets button for this menu Cmd-Click for discontinuous multiple selection of single fastq.gz files (3 datasets) Filter Options Minimum length : 20 Read Modification Options Quality cutoff : 20 Output Options Report : Yes Do not change the other available parameters and click Execute Cutadapt with paired-end reads Repeat the same procedure as above, except that you select Paired-end in step 4: Re-Run the tool using the re-run button on one Cutadapt instance and just select Paired-end instead of Single-end Then you have two input boxes, one for file #1 and one for file #2. In the box file #1 click the multiple datasets button and carefully Select the fastq.gz files with the _1 suffix In the box file #2 click the multiple datasets button and carefully Select the fastq.gz files with the _2 suffix Do not change the other parameters (they are set to the same value as previously because you used the re-run button). Click the Execute button Run MultiQC on Cutadapt jobs Select MultiQC tool Select Cutadapt/Trim Galore! in the menu Which tool was used generate logs? Cmd-Select the Report datasets generated by Cutadapt Press Execute Now, the boring but essential job: Rename carefully the Output datasets generated by Cutadapt. To do so, help yourself to the Info button at the bottom of dataset green boxes. Example: Rename Cutadapt on data 10 and data 9: Read 2 Output in GSM461181_2_treat_paired.fastq.gz Trash the 11 unfiltered/trimmed fastq.gz files. This is important to avoid mixing filtered and non filtered datasets in the next steps.","title":"Optional filtering of reads on sequence quality"},{"location":"Cutadapt/#filtering-datasets-to-remove-or-trim-low-quality-sequences","text":"","title":"Filtering datasets to remove or trim low quality sequences"},{"location":"Cutadapt/#this-step-is-optional-and-should-be-performed-by-50-of-attendees","text":"","title":"This step is optional and should be performed by 50% of attendees."},{"location":"Cutadapt/#cutadapt-with-single-reads","text":"Create a new history Cutapdapt ( wheel -- Create New ) Copy the fastq files from the RNAseq data library to this new history ( wheel -- Copy datasets ) Select the Cutadapt tool Start with selecting Single-end in the Single-end or Paired-end reads? menu Select the multiple datasets button for this menu Cmd-Click for discontinuous multiple selection of single fastq.gz files (3 datasets) Filter Options Minimum length : 20 Read Modification Options Quality cutoff : 20 Output Options Report : Yes Do not change the other available parameters and click Execute","title":"Cutadapt with single reads"},{"location":"Cutadapt/#cutadapt-with-paired-end-reads","text":"Repeat the same procedure as above, except that you select Paired-end in step 4: Re-Run the tool using the re-run button on one Cutadapt instance and just select Paired-end instead of Single-end Then you have two input boxes, one for file #1 and one for file #2. In the box file #1 click the multiple datasets button and carefully Select the fastq.gz files with the _1 suffix In the box file #2 click the multiple datasets button and carefully Select the fastq.gz files with the _2 suffix Do not change the other parameters (they are set to the same value as previously because you used the re-run button). Click the Execute button","title":"Cutadapt with paired-end reads"},{"location":"Cutadapt/#run-multiqc-on-cutadapt-jobs","text":"Select MultiQC tool Select Cutadapt/Trim Galore! in the menu Which tool was used generate logs? Cmd-Select the Report datasets generated by Cutadapt Press Execute Now, the boring but essential job: Rename carefully the Output datasets generated by Cutadapt. To do so, help yourself to the Info button at the bottom of dataset green boxes. Example: Rename Cutadapt on data 10 and data 9: Read 2 Output in GSM461181_2_treat_paired.fastq.gz Trash the 11 unfiltered/trimmed fastq.gz files. This is important to avoid mixing filtered and non filtered datasets in the next steps.","title":"Run MultiQC on Cutadapt jobs"},{"location":"DEDESeq2/","text":"DESeq2 Let's create a clean fresh history ( wheel -- Create New ) and name it DESeq2 Copy the .Counts datasets from your STAR / HISAT2 history to this new history ( wheel -- Copy datasets ) Select the DESeq2 tool with the following parameters: how : Select group tags corresponding to levels In Factor : In 1: Factor Specify a factor name : Treatment In Factor level : In 1: Factor level : Specify a factor level : treated Counts file(s) : the 3 gene count files with treat in their name In 2: Factor level : Specify a factor level : untreated Counts file(s) : the 4 gene count files with untreat in their name Click on Insert Factor (not on Insert Factor level ) In 2: Factor Specify a factor name to Sequencing In Factor level : In 1: Factor level : Specify a factor level : Paired Counts file(s) : the 4 gene count files with paired in their name In 2: Factor level : Specify a factor level : Single Counts file(s) : the 3 gene count files with single in their name Files have header? : Yes Output normalized counts table : Yes Execute","title":"DESeq2 use"},{"location":"DEDESeq2/#deseq2","text":"Let's create a clean fresh history ( wheel -- Create New ) and name it DESeq2 Copy the .Counts datasets from your STAR / HISAT2 history to this new history ( wheel -- Copy datasets ) Select the DESeq2 tool with the following parameters: how : Select group tags corresponding to levels In Factor : In 1: Factor Specify a factor name : Treatment In Factor level : In 1: Factor level : Specify a factor level : treated Counts file(s) : the 3 gene count files with treat in their name In 2: Factor level : Specify a factor level : untreated Counts file(s) : the 4 gene count files with untreat in their name Click on Insert Factor (not on Insert Factor level ) In 2: Factor Specify a factor name to Sequencing In Factor level : In 1: Factor level : Specify a factor level : Paired Counts file(s) : the 4 gene count files with paired in their name In 2: Factor level : Specify a factor level : Single Counts file(s) : the 3 gene count files with single in their name Files have header? : Yes Output normalized counts table : Yes Execute","title":"DESeq2"},{"location":"DE_intro/","text":"Analysis of the differential gene expression using DESeq2 DESeq2 is a great tool for Differential Gene Expression (DGE) analysis. It takes read counts and combines them into a table (with genes in the rows and samples in the columns). Importantly, it applies size factor normalization by: Computing for each gene the geometric mean of read counts across all samples Dividing every gene count by the geometric mean accross samples Using the median of these ratios as a sample\u2019s size factor for normalization Multiple factors with several levels can then be incorporated in the analysis. After normalization we can compare the response of the expression of any gene to the presence of different levels of a factor in a statistically reliable way. In our example, we have samples with two varying factors that can contribute to differences in gene expression: Treatment (either treated or untreated) Sequencing type (paired-end or single-end) Here, treatment is the primary factor that we are interested in. The sequencing type is further information we know about the data that might affect the analysis. Multi-factor analysis allows us to assess the effect of the treatment, while taking the sequencing type into account too. We recommend that you add as many factors as you think may affect gene expression in your experiment. It can be the sequencing type like here, but it can also be the manipulation (if different persons are involved in the library preparation), other batch effects, etc\u2026","title":"Identification of the differentially expressed features - DESeq2"},{"location":"DE_intro/#analysis-of-the-differential-gene-expression-using-deseq2","text":"DESeq2 is a great tool for Differential Gene Expression (DGE) analysis. It takes read counts and combines them into a table (with genes in the rows and samples in the columns). Importantly, it applies size factor normalization by: Computing for each gene the geometric mean of read counts across all samples Dividing every gene count by the geometric mean accross samples Using the median of these ratios as a sample\u2019s size factor for normalization Multiple factors with several levels can then be incorporated in the analysis. After normalization we can compare the response of the expression of any gene to the presence of different levels of a factor in a statistically reliable way. In our example, we have samples with two varying factors that can contribute to differences in gene expression: Treatment (either treated or untreated) Sequencing type (paired-end or single-end) Here, treatment is the primary factor that we are interested in. The sequencing type is further information we know about the data that might affect the analysis. Multi-factor analysis allows us to assess the effect of the treatment, while taking the sequencing type into account too. We recommend that you add as many factors as you think may affect gene expression in your experiment. It can be the sequencing type like here, but it can also be the manipulation (if different persons are involved in the library preparation), other batch effects, etc\u2026","title":"Analysis of the differential gene expression using DESeq2"},{"location":"DEseq2visu/","text":"Visualisation of differential expression Now we would like to extract the most differentially expressed genes due to the treatment, and then visualize them using an heatmap of the normalized counts and also the z-score for each sample. We will proceed in several steps: Extract the most differentially expressed genes using the DESeq2 summary file Extract the normalized counts for these genes for each sample, using the normalized count file generated by DESeq2 Plot the heatmap of the normalized counts Compute the Z score of the normalized counts Plot the heatmap of the Z score of the genes Extract the most differentially expressed genes Select the tool Filter data on any column using simple expressions to extract genes with a significant change in gene expression (adjusted p-value below 0.05) between treated and untreated samples: Filter : the DESeq2 result file With following condition : c7 0.05 The file with the independent filtered results can be used for further downstream analysis as it excludes genes with only few read counts as these genes will not be considered as significantly differentially expressed. The generated file contains too many genes (632/STAR, ) to get a meaningful heatmap. Therefore, in the next step, we will take only the genes with an absolute fold change 2 (log2(fold change) 1) Select the tool Filter data on any column using simple expressions Filter : the differentially expressed genes (output of previous Filter tool) With following condition : abs(c3) 1 We now have a table with 84/STAR, /HISAT2 lines corresponding to the most differentially expressed genes. And for each of the gene, we have its id, its mean normalized counts (averaged over all samples from both conditions), its log2FC and other information. We could plot the log2FC for the different genes, but here we would like to look at a heatmap of expression for these genes in the different samples. So we need to extract the normalized counts for these genes. We will join the normalized count table generated by DESeq2 with the table we just generated, to conserve only the lines corresponding to the most differentially expressed genes. Extract the normalized counts of the most differentially expressed genes Create a Pasted Entry from the header line of the Filter output: Copy the header of the final Filter output Using the Upload tool select Paste/Fetch data and paste the copied data Set the Type to tabular and select Start to upload a new Pasted Entry Concatenate datasets tool to add this header line to the Filter output: select the Concatenate datasets tail-to-head tool select the Pasted entry dataset + Insert Dataset select the final Filter output This ensures that the table of most differentially expressed genes has a header line and can be used in the next step. join the normalized count table generated by DESeq2 with the table we just generated, to conserve only the lines corresponding to the most differentially expressed genes select the Join two Datasets side by side on a specified field tool Join : the Normalized counts file (output of DESeq2 tool) using column : Column: 1 with : most differentially expressed genes (output of the Concatenate tool tool) and column : Column: 1 Keep lines of first input that do not join with second input : No Keep the header lines : Yes The generated file has more columns than we need for the heatmap. In addition to the columns with mean normalized counts, there is the log2FC and other information. We need to remove the extra columns. Cut tool to extract the columns with the gene ids and normalized counts: Select the Cut columns from a table tool Cut columns : c1-c8 Delimited by : Tab From : the joined dataset (output of Join two Datasets tool) We now have a table with 85 lines (the most differentially expressed genes) and the normalized counts for these genes in the 7 samples. Plot the heatmap of the normalized counts of these genes for the samples Select the heatmap2 tool to plot the heatmap: Input should have column headers : the generated table (output of Cut tool) Data transformation : Log2(value+1) transform my data Enable data clustering : Yes Labeling columns and rows : Label columns and not rows Coloring groups : Blue to white to red You should obtain something similar to:","title":"Visualization of the differentially expressed genes"},{"location":"DEseq2visu/#visualisation-of-differential-expression","text":"Now we would like to extract the most differentially expressed genes due to the treatment, and then visualize them using an heatmap of the normalized counts and also the z-score for each sample. We will proceed in several steps: Extract the most differentially expressed genes using the DESeq2 summary file Extract the normalized counts for these genes for each sample, using the normalized count file generated by DESeq2 Plot the heatmap of the normalized counts Compute the Z score of the normalized counts Plot the heatmap of the Z score of the genes","title":"Visualisation of differential expression"},{"location":"DEseq2visu/#extract-the-most-differentially-expressed-genes","text":"Select the tool Filter data on any column using simple expressions to extract genes with a significant change in gene expression (adjusted p-value below 0.05) between treated and untreated samples: Filter : the DESeq2 result file With following condition : c7 0.05 The file with the independent filtered results can be used for further downstream analysis as it excludes genes with only few read counts as these genes will not be considered as significantly differentially expressed. The generated file contains too many genes (632/STAR, ) to get a meaningful heatmap. Therefore, in the next step, we will take only the genes with an absolute fold change 2 (log2(fold change) 1) Select the tool Filter data on any column using simple expressions Filter : the differentially expressed genes (output of previous Filter tool) With following condition : abs(c3) 1 We now have a table with 84/STAR, /HISAT2 lines corresponding to the most differentially expressed genes. And for each of the gene, we have its id, its mean normalized counts (averaged over all samples from both conditions), its log2FC and other information. We could plot the log2FC for the different genes, but here we would like to look at a heatmap of expression for these genes in the different samples. So we need to extract the normalized counts for these genes. We will join the normalized count table generated by DESeq2 with the table we just generated, to conserve only the lines corresponding to the most differentially expressed genes.","title":"Extract the most differentially expressed genes"},{"location":"DEseq2visu/#extract-the-normalized-counts-of-the-most-differentially-expressed-genes","text":"Create a Pasted Entry from the header line of the Filter output: Copy the header of the final Filter output Using the Upload tool select Paste/Fetch data and paste the copied data Set the Type to tabular and select Start to upload a new Pasted Entry Concatenate datasets tool to add this header line to the Filter output: select the Concatenate datasets tail-to-head tool select the Pasted entry dataset + Insert Dataset select the final Filter output This ensures that the table of most differentially expressed genes has a header line and can be used in the next step. join the normalized count table generated by DESeq2 with the table we just generated, to conserve only the lines corresponding to the most differentially expressed genes select the Join two Datasets side by side on a specified field tool Join : the Normalized counts file (output of DESeq2 tool) using column : Column: 1 with : most differentially expressed genes (output of the Concatenate tool tool) and column : Column: 1 Keep lines of first input that do not join with second input : No Keep the header lines : Yes The generated file has more columns than we need for the heatmap. In addition to the columns with mean normalized counts, there is the log2FC and other information. We need to remove the extra columns. Cut tool to extract the columns with the gene ids and normalized counts: Select the Cut columns from a table tool Cut columns : c1-c8 Delimited by : Tab From : the joined dataset (output of Join two Datasets tool) We now have a table with 85 lines (the most differentially expressed genes) and the normalized counts for these genes in the 7 samples. Plot the heatmap of the normalized counts of these genes for the samples Select the heatmap2 tool to plot the heatmap: Input should have column headers : the generated table (output of Cut tool) Data transformation : Log2(value+1) transform my data Enable data clustering : Yes Labeling columns and rows : Label columns and not rows Coloring groups : Blue to white to red You should obtain something similar to:","title":"Extract the normalized counts of the most differentially expressed genes"},{"location":"GO-intro/","text":"Analysis of functional enrichment among the differentially expressed genes We have extracted genes that are differentially expressed in treated (Pasilla gene-depleted) samples compared to untreated samples. We would like to know if there are categories of genes that are enriched among the differentially expressed genes. Gene Ontology (GO) analysis is widely used to reduce complexity and highlight biological processes in genome-wide expression studies. However, standard methods give biased results on RNA-seq data due to over-detection of differential expression for long and highly-expressed transcripts. The goseq tool provides methods for performing GO analysis of RNA-seq data, taking length bias into account. The methods and software used by goseq are equally applicable to other category based tests of RNA-seq data, such as KEGG pathway analysis.","title":"Introduction"},{"location":"GO-intro/#analysis-of-functional-enrichment-among-the-differentially-expressed-genes","text":"We have extracted genes that are differentially expressed in treated (Pasilla gene-depleted) samples compared to untreated samples. We would like to know if there are categories of genes that are enriched among the differentially expressed genes. Gene Ontology (GO) analysis is widely used to reduce complexity and highlight biological processes in genome-wide expression studies. However, standard methods give biased results on RNA-seq data due to over-detection of differential expression for long and highly-expressed transcripts. The goseq tool provides methods for performing GO analysis of RNA-seq data, taking length bias into account. The methods and software used by goseq are equally applicable to other category based tests of RNA-seq data, such as KEGG pathway analysis.","title":"Analysis of functional enrichment among the differentially expressed genes"},{"location":"GO-tool/","text":"Prepare the datasets for GOSeq Select Compute an expression on every row tool with Add expression : bool(c7 0.05) as a new column to : the DESeq2 result file Cut tool with Cut columns : c1,c8 Delimited by : Tab From : the output of the Compute tool Change Case tool with From : the output of the previous Cut tool Change case of columns : c1 Delimited by : Tab To : Upper case This generates the first input for goseq. We need as second input for goseq, the gene lengths. We can use there the gene length generated by featureCounts tool and reformat it a bit. Copy one output of type ...: Feature lengths of the 7 featureCounts runs in the history STAR / HISAT2 Rename it Lengths Change Case tool with From : the feature lengths (output of featureCounts tool) Change case of columns : c1 Delimited by : Tab To : Upper case We have now the two required input files for goseq. Perform GO analysis Select goseq tool with Differentially expressed genes file : first file generated by Change Case tool on previous step Gene lengths file : second file generated by Change Case tool on previous step Gene categories : Get categories Select a genome to use : Fruit fly (dm6) Select Gene ID format : Ensembl Gene ID Select one or more categories : GO: Cellular Component, GO: Biological Process, GO: Molecular Function goseq generates a big table with the following columns for each GO term: Column Description category GO category over_rep_pval p-value for over representation of the term in the differentially expressed genes under_rep_pval p-value for under representation of the term in the differentially expressed genes numDEInCat number of differentially expressed genes in this category numInCat number of genes in this category term detail of the term ontology MF (Molecular Function - molecular activities of gene products), CC (Cellular Component - where gene products are active), BP (Biological Process - pathways and larger processes made up of the activities of multiple gene products) p.adjust.over_represented p-value for over representation of the term in the differentially expressed genes, adjusted for multiple testing with the Benjamini-Hochberg procedure p.adjust.under_represented p-value for over representation of the term in the differentially expressed genes, adjusted for multiple testing with the Benjamini-Hochberg procedure To identify categories significantly enriched/unenriched below some p-value cutoff, it is necessary to use the adjusted p-value. How many GO terms are over-represented at adjusted P value 0.05? Under-represented? How are the over-represented GO terms divided between MF, CC and BP? And for under-represented GO terms?","title":"GO"},{"location":"GO-tool/#prepare-the-datasets-for-goseq","text":"Select Compute an expression on every row tool with Add expression : bool(c7 0.05) as a new column to : the DESeq2 result file Cut tool with Cut columns : c1,c8 Delimited by : Tab From : the output of the Compute tool Change Case tool with From : the output of the previous Cut tool Change case of columns : c1 Delimited by : Tab To : Upper case This generates the first input for goseq. We need as second input for goseq, the gene lengths. We can use there the gene length generated by featureCounts tool and reformat it a bit. Copy one output of type ...: Feature lengths of the 7 featureCounts runs in the history STAR / HISAT2 Rename it Lengths Change Case tool with From : the feature lengths (output of featureCounts tool) Change case of columns : c1 Delimited by : Tab To : Upper case We have now the two required input files for goseq.","title":"Prepare the datasets for GOSeq"},{"location":"GO-tool/#perform-go-analysis","text":"Select goseq tool with Differentially expressed genes file : first file generated by Change Case tool on previous step Gene lengths file : second file generated by Change Case tool on previous step Gene categories : Get categories Select a genome to use : Fruit fly (dm6) Select Gene ID format : Ensembl Gene ID Select one or more categories : GO: Cellular Component, GO: Biological Process, GO: Molecular Function goseq generates a big table with the following columns for each GO term: Column Description category GO category over_rep_pval p-value for over representation of the term in the differentially expressed genes under_rep_pval p-value for under representation of the term in the differentially expressed genes numDEInCat number of differentially expressed genes in this category numInCat number of genes in this category term detail of the term ontology MF (Molecular Function - molecular activities of gene products), CC (Cellular Component - where gene products are active), BP (Biological Process - pathways and larger processes made up of the activities of multiple gene products) p.adjust.over_represented p-value for over representation of the term in the differentially expressed genes, adjusted for multiple testing with the Benjamini-Hochberg procedure p.adjust.under_represented p-value for over representation of the term in the differentially expressed genes, adjusted for multiple testing with the Benjamini-Hochberg procedure To identify categories significantly enriched/unenriched below some p-value cutoff, it is necessary to use the adjusted p-value.","title":"Perform GO analysis"},{"location":"GO-tool/#how-many-go-terms-are-over-represented-at-adjusted-p-value-005","text":"","title":"How many GO terms are over-represented at adjusted P value &lt; 0.05?"},{"location":"GO-tool/#under-represented","text":"","title":"Under-represented?"},{"location":"GO-tool/#how-are-the-over-represented-go-terms-divided-between-mf-cc-and-bp","text":"","title":"How are the over-represented GO terms divided between MF, CC and BP?"},{"location":"GO-tool/#and-for-under-represented-go-terms","text":"","title":"And for under-represented GO terms?"},{"location":"QC/","text":"Quality Control FastQC tool to analyse the fastq (or fastq.gz) datasets Create a new history and name it Quality Control Copy again all fastq.gz files from the data library into this history. You should have 11 datasets in your history Select the fastqc tool. In the Short read data from your current history menu, select the multiple datasets button. Shift-Click to select all 11 datasets Click Execute Look at the results of FastQC : These are the datasets named FastQC on data xx: Webpage MultiQC to aggregate and have a general view of sequence qualities in the project Select the MultiQC tool (you can use the search bar). Which tool was used generate logs? : Select FastQC Type of FastQC output? : Select Raw data FastQC output Cmd-Click (discontinuous, multiple selection) the 11 files named FastQC on xx: RawData Click Execute Look at the result of MultiQC , dataset named MultiQC on ...: Webpage Pay attention to the General Statistics that indicate the read sizes. Pay attention to the Sequence Quality Histograms . What can you say about the quality of the samples ? Have a look to the Adapter Content section.","title":"Quality control"},{"location":"QC/#quality-control","text":"","title":"Quality Control"},{"location":"QC/#fastqc-tool-to-analyse-the-fastq-or-fastqgz-datasets","text":"Create a new history and name it Quality Control Copy again all fastq.gz files from the data library into this history. You should have 11 datasets in your history Select the fastqc tool. In the Short read data from your current history menu, select the multiple datasets button. Shift-Click to select all 11 datasets Click Execute Look at the results of FastQC : These are the datasets named FastQC on data xx: Webpage","title":"FastQC tool to analyse the fastq (or fastq.gz) datasets"},{"location":"QC/#multiqc-to-aggregate-and-have-a-general-view-of-sequence-qualities-in-the-project","text":"Select the MultiQC tool (you can use the search bar). Which tool was used generate logs? : Select FastQC Type of FastQC output? : Select Raw data FastQC output Cmd-Click (discontinuous, multiple selection) the 11 files named FastQC on xx: RawData Click Execute Look at the result of MultiQC , dataset named MultiQC on ...: Webpage Pay attention to the General Statistics that indicate the read sizes. Pay attention to the Sequence Quality Histograms . What can you say about the quality of the samples ? Have a look to the Adapter Content section.","title":"MultiQC to aggregate and have a general view of sequence qualities in the project"},{"location":"RNAseq_DE/","text":"Statistical Analysis of Differential expression","title":"Statistical Analysis of Differential expression"},{"location":"RNAseq_DE/#statistical-analysis-of-differential-expression","text":"","title":"Statistical Analysis of Differential expression"},{"location":"bam/","text":"Inspection of BAM files Click on the small eye icon of a Bam dataset (generated either with RNA STAR or HISAT2 ) The header contains the chromosome specifications (their name and length) and other informations such as the software that generation the Bam file and the command line to run the software. A BAM file (or a SAM file, the non compressed version) consists of: A header section (the lines starting with @) containing metadata, in particular the chromosome names and lengths (lines starting with the @SQ symbol) An alignment section consisting of a table with 11 mandatory fields, as well as a variable number of optional fields: Col Field Type Brief Description 1 QNAME String Query template NAME 2 FLAG Integer bitwise FLAG 3 RNAME String References sequence NAME 4 POS Integer 1-based leftmost mapping POSition 5 MAPQ Integer MAPping Quality 6 CIGAR String CIGAR String 7 RNEXT String Ref. name of the mate/next read 8 PNEXT Integer Position of the mate/next read 9 TLEN Integer observed Template LENgth 10 SEQ String segment SEQuence 11 QUAL String ASCII of Phred-scaled base QUALity+33","title":"BAM inspection"},{"location":"bam/#inspection-of-bam-files","text":"Click on the small eye icon of a Bam dataset (generated either with RNA STAR or HISAT2 ) The header contains the chromosome specifications (their name and length) and other informations such as the software that generation the Bam file and the command line to run the software. A BAM file (or a SAM file, the non compressed version) consists of: A header section (the lines starting with @) containing metadata, in particular the chromosome names and lengths (lines starting with the @SQ symbol) An alignment section consisting of a table with 11 mandatory fields, as well as a variable number of optional fields: Col Field Type Brief Description 1 QNAME String Query template NAME 2 FLAG Integer bitwise FLAG 3 RNAME String References sequence NAME 4 POS Integer 1-based leftmost mapping POSition 5 MAPQ Integer MAPping Quality 6 CIGAR String CIGAR String 7 RNEXT String Ref. name of the mate/next read 8 PNEXT Integer Position of the mate/next read 9 TLEN Integer observed Template LENgth 10 SEQ String segment SEQuence 11 QUAL String ASCII of Phred-scaled base QUALity+33","title":"Inspection of BAM files"},{"location":"cDNAs/","text":"cDNA synthesis Oligo-dT Random priming","title":"RNAseq librairies - cDNA synthesis"},{"location":"cDNAs/#cdna-synthesis","text":"","title":"cDNA synthesis"},{"location":"cDNAs/#oligo-dt","text":"","title":"Oligo-dT"},{"location":"cDNAs/#random-priming","text":"","title":"Random priming"},{"location":"count/","text":"featureCounts In your history HISAT2 or STAR Select the featureCounts tool with the following parameters to count your reads: Alignment file : select multiple datasets button and shift-click the 7 bam files you have generated Specify strand information : Unstranded Gene annotation file : in your history Gene annotation file : Drosophila_melanogaster.BDGP6.95.gtf FASTA/Q file : Gene-ID \"\\t\" read-count (MultiQC/DESeq2/edgeR/limma-voom compatible) Create gene-length file : Yes In Options for paired-end reads : Count fragments instead of reads : Enabled; fragments (or templates) will be counted instead of reads In Advanced options : GFF feature type filter : exon GFF gene identifier : gene_id Allow read to contribute to multiple features : No Count multi-mapping reads/fragments : Disabled; multi-mapping reads are excluded (default) Minimum mapping quality per read : 10 Leave other settings as defaults Execute You need now to rename you datasets to facilitate your downstream analysis. Be quiet and focus ! No hurry, this is an important task in the analysis. Search and select datasets with featurecounts (as we did before for renaming datasets) Click on the info icon of featureCounts on xxx: Counts Copy the name of the dataset Alignment file in the tool parameters table (for instance, GSM461176_untreat_single.bam ) Now click on the pencil icon of the same dataset Paste your text in the Name field of the dataset Edit your text by replacing bam by Counts (e.g. GSM461176_untreat_single.Counts) repeat ad lib for all counts files generated by featureCounts MultiQC We have now generated (1) Bam alignments and (2) Counts files with feature counts, and we have carefully and courageously edited the names of generated datasets. We are going to be rewarded for this effort in the next steps ! In your history HISAT2 or STAR Select the MultiQC tool with the following parameters: 1: Results / Which tool was used generate logs? : STAR or HISAT2 (depending on your analysis track) STAR or HISAT output : shift-click select all files with the extension .log Click on the + Insert Result button 2: Results / Which tool was used generate logs? : featureCounts Output of FeatureCounts : shift-click select all files with the extension : Summary Execute Examine the results and","title":"Count the number of reads per annotated gene"},{"location":"count/#featurecounts","text":"In your history HISAT2 or STAR Select the featureCounts tool with the following parameters to count your reads: Alignment file : select multiple datasets button and shift-click the 7 bam files you have generated Specify strand information : Unstranded Gene annotation file : in your history Gene annotation file : Drosophila_melanogaster.BDGP6.95.gtf FASTA/Q file : Gene-ID \"\\t\" read-count (MultiQC/DESeq2/edgeR/limma-voom compatible) Create gene-length file : Yes In Options for paired-end reads : Count fragments instead of reads : Enabled; fragments (or templates) will be counted instead of reads In Advanced options : GFF feature type filter : exon GFF gene identifier : gene_id Allow read to contribute to multiple features : No Count multi-mapping reads/fragments : Disabled; multi-mapping reads are excluded (default) Minimum mapping quality per read : 10 Leave other settings as defaults Execute You need now to rename you datasets to facilitate your downstream analysis. Be quiet and focus ! No hurry, this is an important task in the analysis. Search and select datasets with featurecounts (as we did before for renaming datasets) Click on the info icon of featureCounts on xxx: Counts Copy the name of the dataset Alignment file in the tool parameters table (for instance, GSM461176_untreat_single.bam ) Now click on the pencil icon of the same dataset Paste your text in the Name field of the dataset Edit your text by replacing bam by Counts (e.g. GSM461176_untreat_single.Counts) repeat ad lib for all counts files generated by featureCounts","title":"featureCounts"},{"location":"count/#multiqc","text":"We have now generated (1) Bam alignments and (2) Counts files with feature counts, and we have carefully and courageously edited the names of generated datasets. We are going to be rewarded for this effort in the next steps ! In your history HISAT2 or STAR Select the MultiQC tool with the following parameters: 1: Results / Which tool was used generate logs? : STAR or HISAT2 (depending on your analysis track) STAR or HISAT output : shift-click select all files with the extension .log Click on the + Insert Result button 2: Results / Which tool was used generate logs? : featureCounts Output of FeatureCounts : shift-click select all files with the extension : Summary Execute Examine the results and","title":"MultiQC"},{"location":"hisat2/","text":"HISAT2 (option for 50 % of attendees) create a new history and name it HISAT2 Import the 11 datasets from the RNAseq data library to this HISAT2 history, plus the Drosophila_melanogaster.BDGP6.95.gtf file Select the HISAT2 tool with the following parameters to map your reads on the reference genome: Source for the reference genome : Use a builtin genome Select a reference genome : dm6 Is this a single or paired library: Single-End FASTA/Q file : GSM461176_untreat_single.fastq.gz GSM461179_treat_single.fastq.gz GSM461182_untreat_single.fastq.gz Specify strand information: Unstranded Summary options Output alignment summary in a more machine-friendly style. : YES Print alignment summary to a file. : YES Leave other settings as defaults Execute Redo the HISAT2 run for paired-end files Rerun the HISAT2 tool with the following parameters to map your reads on the reference genome: Source for the reference genome : Use a builtin genome Select a reference genome : dm6 Is this a single or paired library: Paired-End FASTA/Q file #1 : GSM461177_1_untreat_paired.fastq.gz GSM461178_1_untreat_paired.fastq.gz GSM461180_1_treat_paired.fastq.gz GSM461181_1_treat_paired.fastq.gz FASTA/Q file #2 : GSM461177_2_untreat_paired.fastq.gz GSM461178_2_untreat_paired.fastq.gz GSM461180_2_treat_paired.fastq.gz GSM461181_2_treat_paired.fastq.gz Specify strand information: Unstranded Leave other settings as defaults (since you are redoing a run) Execute Rename your datasets ! You need now to rename you datasets to facilitate your downstream analysis. Be quiet and focus ! No hurry, this is an important task in the analysis. Search and select datasets with HISAT2 Click on the info icon of both (BAM) and Mapping summary files Copy the name or one of the two names of the datasets as shown bellow Now click on the pencil icon of the same dataset Paste your text in the Name field of the dataset Edit your text as follow for Mapping summary files Edit your text as follow for (BAM) files repeat ad lib for all Mapping summary and (BAM) files","title":"HiSAT2"},{"location":"hisat2/#hisat2-option-for-50-of-attendees","text":"create a new history and name it HISAT2 Import the 11 datasets from the RNAseq data library to this HISAT2 history, plus the Drosophila_melanogaster.BDGP6.95.gtf file Select the HISAT2 tool with the following parameters to map your reads on the reference genome: Source for the reference genome : Use a builtin genome Select a reference genome : dm6 Is this a single or paired library: Single-End FASTA/Q file : GSM461176_untreat_single.fastq.gz GSM461179_treat_single.fastq.gz GSM461182_untreat_single.fastq.gz Specify strand information: Unstranded Summary options Output alignment summary in a more machine-friendly style. : YES Print alignment summary to a file. : YES Leave other settings as defaults Execute Redo the HISAT2 run for paired-end files Rerun the HISAT2 tool with the following parameters to map your reads on the reference genome: Source for the reference genome : Use a builtin genome Select a reference genome : dm6 Is this a single or paired library: Paired-End FASTA/Q file #1 : GSM461177_1_untreat_paired.fastq.gz GSM461178_1_untreat_paired.fastq.gz GSM461180_1_treat_paired.fastq.gz GSM461181_1_treat_paired.fastq.gz FASTA/Q file #2 : GSM461177_2_untreat_paired.fastq.gz GSM461178_2_untreat_paired.fastq.gz GSM461180_2_treat_paired.fastq.gz GSM461181_2_treat_paired.fastq.gz Specify strand information: Unstranded Leave other settings as defaults (since you are redoing a run) Execute","title":"HISAT2  (option for 50 % of attendees)"},{"location":"hisat2/#rename-your-datasets","text":"You need now to rename you datasets to facilitate your downstream analysis. Be quiet and focus ! No hurry, this is an important task in the analysis. Search and select datasets with HISAT2 Click on the info icon of both (BAM) and Mapping summary files Copy the name or one of the two names of the datasets as shown bellow Now click on the pencil icon of the same dataset Paste your text in the Name field of the dataset Edit your text as follow for Mapping summary files Edit your text as follow for (BAM) files repeat ad lib for all Mapping summary and (BAM) files","title":"Rename your datasets !"},{"location":"intro_counting/","text":"Counting strategy Count the number of reads per annotated gene To compare the expression of single genes between different conditions (e.g. with or without Pasilla depletion), an essential first step is to quantify the number of reads per gene. From the image above, we can compute: Number of reads per exons Gene Exon Number of reads gene1 exon1 3 gene1 exon2 2 gene2 exon1 3 gene2 exon2 4 gene2 exon3 3 The gene1 has 4 reads, not 5 (gene1 - exon1 + gene1 - exon2) because of the splicing of the last read. The gene2 has 6 reads (3 spliced reads) Counting tools Two main tools could be used for that: HTSeq-count ( Anders et al, Bioinformatics, 2015 ) or featureCounts ( Liao et al, Bioinformatics, 2014 ). FeatureCounts is considerably faster and requires far less computational resources, so we will use it here. In principle, the counting of reads overlapping with genomic features is a fairly simple task. But there are some details that need to be given to featureCounts: for example the strandness.","title":"Introduction to read counting"},{"location":"intro_counting/#counting-strategy","text":"","title":"Counting strategy"},{"location":"intro_counting/#count-the-number-of-reads-per-annotated-gene","text":"To compare the expression of single genes between different conditions (e.g. with or without Pasilla depletion), an essential first step is to quantify the number of reads per gene. From the image above, we can compute:","title":"Count the number of reads per annotated gene"},{"location":"intro_counting/#number-of-reads-per-exons","text":"Gene Exon Number of reads gene1 exon1 3 gene1 exon2 2 gene2 exon1 3 gene2 exon2 4 gene2 exon3 3 The gene1 has 4 reads, not 5 (gene1 - exon1 + gene1 - exon2) because of the splicing of the last read. The gene2 has 6 reads (3 spliced reads)","title":"Number of reads per exons"},{"location":"intro_counting/#counting-tools","text":"Two main tools could be used for that: HTSeq-count ( Anders et al, Bioinformatics, 2015 ) or featureCounts ( Liao et al, Bioinformatics, 2014 ). FeatureCounts is considerably faster and requires far less computational resources, so we will use it here. In principle, the counting of reads overlapping with genomic features is a fairly simple task. But there are some details that need to be given to featureCounts: for example the strandness.","title":"Counting tools"},{"location":"mapping/","text":"Mapping the reads to the reference genome","title":"Mapping"},{"location":"mapping/#mapping-the-reads-to-the-reference-genome","text":"","title":"Mapping the reads to the reference genome"},{"location":"outline_conclusion/","text":"Experimental procedures affect downstream analyses","title":"Experimental procedures affect downstream analyses"},{"location":"outline_conclusion/#experimental-procedures-affect-downstream-analyses","text":"","title":"Experimental procedures affect downstream analyses"},{"location":"read_filtering/","text":"Focus on quality control \u201cfiltering\u201d in RNAseq analysis It is tempting to filter the data to get \u201cgood counts\u201d low quality alignments PCR duplicates But.. Why low quality reads should be skipped if they were aligned ? Is the implicit hypothesis \"low quality read are miss-mapped\" a likely hypothesis ? When we remove PCR duplicates (exact same sequence and exact same location), are we sure that we remove PCR duplicates ? What are the metrics that support the implicit hypothesis that read with same sequence same location are PCR duplicates ? Reflect of miRNA sequencing...","title":"Reflecting on quality control & \u201cfiltering\u201d in RNAseq analysis"},{"location":"read_filtering/#focus-on-quality-control-filtering-in-rnaseq-analysis","text":"","title":"Focus on quality control &amp; \u201cfiltering\u201d in RNAseq analysis"},{"location":"read_filtering/#it-is-tempting-to-filter-the-data-to-get-good-counts","text":"low quality alignments PCR duplicates","title":"It is tempting to filter the data to get \u201cgood counts\u201d"},{"location":"read_filtering/#but","text":"Why low quality reads should be skipped if they were aligned ? Is the implicit hypothesis \"low quality read are miss-mapped\" a likely hypothesis ? When we remove PCR duplicates (exact same sequence and exact same location), are we sure that we remove PCR duplicates ? What are the metrics that support the implicit hypothesis that read with same sequence same location are PCR duplicates ? Reflect of miRNA sequencing...","title":"But.."},{"location":"readcounts/","text":"Reference-base Expression analysis: the key idea Map reads to a reference genome with aligners TopHat TopHat2 HiSat HiSat2 STAR \u2192 These aligners are \u201csplit aware\u201d \u2192 They generate a BAM Alignment file Use a read counting software and annotation information (GTF, GFF3, BED, \u2026) to count the read spanning a gene / transcript The input file for this counting software is the BAM Alignment file Read counts are proxies to RNA steady state levels","title":"The key idea in Reference-base Expression analysis"},{"location":"readcounts/#reference-base-expression-analysis-the-key-idea","text":"","title":"Reference-base Expression analysis: the key idea"},{"location":"readcounts/#map-reads-to-a-reference-genome-with-aligners","text":"TopHat TopHat2 HiSat HiSat2 STAR \u2192 These aligners are \u201csplit aware\u201d \u2192 They generate a BAM Alignment file","title":"Map reads to a reference genome with aligners"},{"location":"readcounts/#use-a-read-counting-software-and-annotation-information-gtf-gff3-bed-to-count-the-read-spanning-a-gene-transcript","text":"The input file for this counting software is the BAM Alignment file","title":"Use a read counting software and annotation information (GTF, GFF3, BED, \u2026) to count the read spanning a gene / transcript"},{"location":"readcounts/#read-counts-are-proxies-to-rna-steady-state-levels","text":"","title":"Read counts are proxies to RNA steady state levels"},{"location":"sequencing_strategies/","text":"Inserts and sequencing strategies You can retrieve three different informations : The relative orientation of reads : I : Inwards M : Matching O : Outwards The strandedness of the library : S : Stranded U : Unstranded The strand origin of reads : F : read 1 (or single-end read) comes from the forward strand R : read 1 (or single-end read) comes from the reverse strand in practice, with Illumina paired-end RNAseq protocols you will either deal with: Unstranded RNAseq data IU type from above. Also called fr-unstranded in TopHat/Cufflinks nomenclature Stranded RNAseq data produced with Illumina TrueSeq RNAseq kits ISR type from above or fr-firststrand in TopHat/Cufflinks nomenclature","title":"RNAseq librairies - Inserts and sequencing strategies"},{"location":"sequencing_strategies/#inserts-and-sequencing-strategies","text":"You can retrieve three different informations : The relative orientation of reads : I : Inwards M : Matching O : Outwards The strandedness of the library : S : Stranded U : Unstranded The strand origin of reads : F : read 1 (or single-end read) comes from the forward strand R : read 1 (or single-end read) comes from the reverse strand","title":"Inserts and sequencing strategies"},{"location":"sequencing_strategies/#in-practice-with-illumina-paired-end-rnaseq-protocols-you-will-either-deal-with","text":"","title":"in practice, with Illumina paired-end RNAseq protocols you will either deal with:"},{"location":"sequencing_strategies/#unstranded-rnaseq-data","text":"IU type from above. Also called fr-unstranded in TopHat/Cufflinks nomenclature","title":"Unstranded RNAseq data"},{"location":"sequencing_strategies/#stranded-rnaseq-data-produced-with-illumina-trueseq-rnaseq-kits","text":"ISR type from above or fr-firststrand in TopHat/Cufflinks nomenclature","title":"Stranded RNAseq data produced with Illumina TrueSeq RNAseq kits"},{"location":"star/","text":"RNA STAR (option for 50 % of attendees) For information to set proper value for STAR parameters: create a new history and name it RNA STAR Import the 11 datasets from the RNAseq data library to this RNA STAR history, plus the Drosophila_melanogaster.BDGP6.95.gtf file Select the RNA STAR tool with the following parameters to map your reads on the reference genome: Single-end or paired-end reads : Single-end RNA-Seq FASTQ/FASTA file (multiple datasets button), Cmd-shift Select: GSM461176_untreat_single.fastq.gz GSM461179_treat_single.fastq.gz Custom or built-in reference genome: Use a built-in index Reference genome with or without an annotation: use genome reference without builtin gene-model Select reference genome: Drosophila Melanogaster (dm6) Gene model (gff3,gtf) file for splice junctions: the imported Drosophila_melanogaster.BDGP6.95.gtf Length of the genomic sequence around annotated junctions: 44 (This parameter should be length of reads - 1, see above table from fastQC/multiQC analysis) Execute Redo the STAR run with 3.2 Select the RNA STAR tool with the following parameters to map your reads on the reference genome: RNA-Seq FASTQ/FASTA file (as multiple datasets), Cmd-shift Select: - GSM461182_untreat_single.fastq.gz 3.7 Length of the genomic sequence around annotated junctions: 74 (This parameter should be length of reads - 1, see above table from fastQC/multiQC analysis) Redo a last STAR run for paired-end datasets With the following parameters to map your reads on the reference genome: Single-end or paired-end reads : Paired-end (as multiple datasets) RNA-Seq FASTQ/FASTA file, forward reads (multiple datasets button), Cmd-shift Select: GSM461177_1_untreat_paired.fastq.gz GSM461178_1_untreat_paired.fastq.gz GSM461180_1_treat_paired.fastq.gz `GSM461181_1_treat_paired.fastq.gz RNA-Seq FASTQ/FASTA file, forward reads (multiple datasets button), Cmd-shift Select: GSM461177_2_untreat_paired.fastq.gz GSM461178_2_untreat_paired.fastq.gz GSM461180_2_treat_paired.fastq.gz `GSM461181_2_treat_paired.fastq.gz Custom or built-in reference genome: Use a built-in index Reference genome with or without an annotation: use genome reference without builtin gene-model Select reference genome: Drosophila Melanogaster (dm6) Gene model (gff3,gtf) file for splice junctions: the imported Drosophila_melanogaster.BDGP6.95.gtf Length of the genomic sequence around annotated junctions: 36 (This parameter should be length of reads - 1, see above table from fastQC/multiQC analysis) Execute Rename your datasets ! You need now to rename you datasets to facilitate your downstream analysis. Be quiet and focus ! No hurry, this is an important task in the analysis. Search and select datasets with RNA STAR Click on the info icon of both log and bam files Copy the name or one of the two names of the datasets as shown bellow Now click on the pencil icon of the same dataset Paste your text in the Name field of the dataset Edit your text as follow for log files Edit your text as follow for bam files repeat ad lib for all log and bam files","title":"RNA STAR"},{"location":"star/#rna-star-option-for-50-of-attendees","text":"For information to set proper value for STAR parameters: create a new history and name it RNA STAR Import the 11 datasets from the RNAseq data library to this RNA STAR history, plus the Drosophila_melanogaster.BDGP6.95.gtf file Select the RNA STAR tool with the following parameters to map your reads on the reference genome: Single-end or paired-end reads : Single-end RNA-Seq FASTQ/FASTA file (multiple datasets button), Cmd-shift Select: GSM461176_untreat_single.fastq.gz GSM461179_treat_single.fastq.gz Custom or built-in reference genome: Use a built-in index Reference genome with or without an annotation: use genome reference without builtin gene-model Select reference genome: Drosophila Melanogaster (dm6) Gene model (gff3,gtf) file for splice junctions: the imported Drosophila_melanogaster.BDGP6.95.gtf Length of the genomic sequence around annotated junctions: 44 (This parameter should be length of reads - 1, see above table from fastQC/multiQC analysis) Execute Redo the STAR run with 3.2 Select the RNA STAR tool with the following parameters to map your reads on the reference genome: RNA-Seq FASTQ/FASTA file (as multiple datasets), Cmd-shift Select: - GSM461182_untreat_single.fastq.gz 3.7 Length of the genomic sequence around annotated junctions: 74 (This parameter should be length of reads - 1, see above table from fastQC/multiQC analysis) Redo a last STAR run for paired-end datasets With the following parameters to map your reads on the reference genome: Single-end or paired-end reads : Paired-end (as multiple datasets) RNA-Seq FASTQ/FASTA file, forward reads (multiple datasets button), Cmd-shift Select: GSM461177_1_untreat_paired.fastq.gz GSM461178_1_untreat_paired.fastq.gz GSM461180_1_treat_paired.fastq.gz `GSM461181_1_treat_paired.fastq.gz RNA-Seq FASTQ/FASTA file, forward reads (multiple datasets button), Cmd-shift Select: GSM461177_2_untreat_paired.fastq.gz GSM461178_2_untreat_paired.fastq.gz GSM461180_2_treat_paired.fastq.gz `GSM461181_2_treat_paired.fastq.gz Custom or built-in reference genome: Use a built-in index Reference genome with or without an annotation: use genome reference without builtin gene-model Select reference genome: Drosophila Melanogaster (dm6) Gene model (gff3,gtf) file for splice junctions: the imported Drosophila_melanogaster.BDGP6.95.gtf Length of the genomic sequence around annotated junctions: 36 (This parameter should be length of reads - 1, see above table from fastQC/multiQC analysis) Execute","title":"RNA STAR (option for 50 % of attendees)"},{"location":"star/#rename-your-datasets","text":"You need now to rename you datasets to facilitate your downstream analysis. Be quiet and focus ! No hurry, this is an important task in the analysis. Search and select datasets with RNA STAR Click on the info icon of both log and bam files Copy the name or one of the two names of the datasets as shown bellow Now click on the pencil icon of the same dataset Paste your text in the Name field of the dataset Edit your text as follow for log files Edit your text as follow for bam files repeat ad lib for all log and bam files","title":"Rename your datasets !"},{"location":"strandness/","text":"Estimation of the strandness In practice, with Illumina RNA-seq protocols you will most likely deal with either: Unstranded RNAseq data Stranded RNA-seq data produced with - kits and dUTP tagging (ISR) This information should be provided with your FASTQ files, ask your sequencing facility! If not, try to find it on the site where you downloaded the data or in the corresponding publication. Another option is to estimate these parameters with a tool called Infer Experiment from the RSeQC tool suite. This tool takes the output of your mappings (BAM files), selects a subsample of your reads and compares their genome coordinates and strands with those of the reference gene model (from an annotation file). Based on the strand of the genes, it can gauge whether sequencing is strand-specific, and if so, how reads are stranded. Use of Infer Experiment tool Convert GTF to BED12 tool to convert the GTF file to BED Go to your history STAR or HISAT2 Select the tool Convert GTF to BED12 GTF File to convert : Drosophila_melanogaster.BDGP6.95.gtf Execute Infer Experiment tool to determine the library strandness In the same history STAR or HISAT2 Select the tool Infer Experiment Input .bam file : mapped.bam files (outputs of RNA STAR or HISAT2 tools) Reference gene model : BED12 file (output of Convert GTF to BED12 tool) Number of reads sampled from SAM/BAM file (default = 200000) : 200000 Execute Summarize results with MultiQC tool Select the tool MultiQC Which tool was used generate logs? RSeQC RSeQC output (Type of RSeQC output?) infer_experiment Select the 7 datasets of type Infer Experiment on ... Execute Infer Experiment tool generates one file with information on: Paired-end or single-end library Fraction of reads failed to determine 2 lines: For single-end Fraction of reads explained by \u201c++,\u2013\u201d (SF in previous figure) Fraction of reads explained by \u201c+-,-+\u201d (SR in previous figure) For paired-end Fraction of reads explained by \u201c1++,1\u2013,2+-,2-+\u201d (SF in previous figure) Fraction of reads explained by \u201c1+-,1-+,2++,2\u2013\u201d (SR in previous figure) If the two \u201cFraction of reads explained by\u201d numbers are close to each other ( i.e. a mix of SF and SR), we conclude that the library is not a strand-specific dataset (U in previous figure). As it is sometimes quite difficult to find out which settings correspond to those of other programs, the following table might be helpful to identify the library type: Library type Infer Experiment TopHat HISAT htseq-count featureCounts Paired-End (PE) - SF 1++,1\u2013,2+-,2-+ FR Second Strand Second Strand F/FR yes Forward (1) PE - SR 1+-,1-+,2++,2\u2013 FR First Strand First Strand R/RF reverse Reverse (2) Single-End (SE) - SF +,\u2013 FR Second Strand Second Strand F/FR yes Forward (1) SE - SR +-,-+ FR First Strand First Strand R/RF reverse Reverse (2) PE, SE - U undecided FR Unstranded default no Unstranded (0)","title":"Estimation of the strandness"},{"location":"strandness/#estimation-of-the-strandness","text":"In practice, with Illumina RNA-seq protocols you will most likely deal with either: Unstranded RNAseq data Stranded RNA-seq data produced with - kits and dUTP tagging (ISR) This information should be provided with your FASTQ files, ask your sequencing facility! If not, try to find it on the site where you downloaded the data or in the corresponding publication. Another option is to estimate these parameters with a tool called Infer Experiment from the RSeQC tool suite. This tool takes the output of your mappings (BAM files), selects a subsample of your reads and compares their genome coordinates and strands with those of the reference gene model (from an annotation file). Based on the strand of the genes, it can gauge whether sequencing is strand-specific, and if so, how reads are stranded.","title":"Estimation of the strandness"},{"location":"strandness/#use-of-infer-experiment-tool","text":"","title":"Use of Infer Experiment tool"},{"location":"strandness/#convert-gtf-to-bed12-tool-to-convert-the-gtf-file-to-bed","text":"Go to your history STAR or HISAT2 Select the tool Convert GTF to BED12 GTF File to convert : Drosophila_melanogaster.BDGP6.95.gtf Execute","title":"Convert GTF to BED12 tool to convert the GTF file to BED"},{"location":"strandness/#infer-experiment-tool-to-determine-the-library-strandness","text":"In the same history STAR or HISAT2 Select the tool Infer Experiment Input .bam file : mapped.bam files (outputs of RNA STAR or HISAT2 tools) Reference gene model : BED12 file (output of Convert GTF to BED12 tool) Number of reads sampled from SAM/BAM file (default = 200000) : 200000 Execute","title":"Infer Experiment tool to determine the library strandness"},{"location":"strandness/#summarize-results-with-multiqc-tool","text":"Select the tool MultiQC Which tool was used generate logs? RSeQC RSeQC output (Type of RSeQC output?) infer_experiment Select the 7 datasets of type Infer Experiment on ... Execute Infer Experiment tool generates one file with information on: Paired-end or single-end library Fraction of reads failed to determine 2 lines: For single-end Fraction of reads explained by \u201c++,\u2013\u201d (SF in previous figure) Fraction of reads explained by \u201c+-,-+\u201d (SR in previous figure) For paired-end Fraction of reads explained by \u201c1++,1\u2013,2+-,2-+\u201d (SF in previous figure) Fraction of reads explained by \u201c1+-,1-+,2++,2\u2013\u201d (SR in previous figure) If the two \u201cFraction of reads explained by\u201d numbers are close to each other ( i.e. a mix of SF and SR), we conclude that the library is not a strand-specific dataset (U in previous figure). As it is sometimes quite difficult to find out which settings correspond to those of other programs, the following table might be helpful to identify the library type: Library type Infer Experiment TopHat HISAT htseq-count featureCounts Paired-End (PE) - SF 1++,1\u2013,2+-,2-+ FR Second Strand Second Strand F/FR yes Forward (1) PE - SR 1+-,1-+,2++,2\u2013 FR First Strand First Strand R/RF reverse Reverse (2) Single-End (SE) - SF +,\u2013 FR Second Strand Second Strand F/FR yes Forward (1) SE - SR +-,-+ FR First Strand First Strand R/RF reverse Reverse (2) PE, SE - U undecided FR Unstranded default no Unstranded (0)","title":"Summarize results with MultiQC tool"},{"location":"transcript_quant/","text":"Transcript Quantification Note that we use absolute read counts because we are going to compare counts across samples. Other metrics for comparison of genes within the same sample are: CPM (Counts Per Million) Each gene count is divided by the corresponding library size (in millions). RPKM (reads per kilobase of exons per million mapped reads) TPM (Transcript per Million) Divide the read counts by the length of each gene in kilobases. This gives you reads per kilobase (RPK). Sum up all the RPK values in a sample and divide this number by 1,000,000. This is your \u201cper million\u201d scaling factor. Divide the RPK values by the \u201cper million\u201d scaling factor. This gives you TPM","title":"Transcript Quantification"},{"location":"transcript_quant/#transcript-quantification","text":"Note that we use absolute read counts because we are going to compare counts across samples. Other metrics for comparison of genes within the same sample are: CPM (Counts Per Million) Each gene count is divided by the corresponding library size (in millions). RPKM (reads per kilobase of exons per million mapped reads) TPM (Transcript per Million) Divide the read counts by the length of each gene in kilobases. This gives you reads per kilobase (RPK). Sum up all the RPK values in a sample and divide this number by 1,000,000. This is your \u201cper million\u201d scaling factor. Divide the RPK values by the \u201cper million\u201d scaling factor. This gives you TPM","title":"Transcript Quantification"},{"location":"uploads/","text":"Data The original data is available at NCBI Gene Expression Omnibus (GEO) under accession number GSE18508 . It is also mirrored at the EBI Small Read Archive under the accession number SRP001537 The data was generated through deep Sequencing of mRNA from the Drosophila melanogaster S2-DRSC cells that have been RNAi depleted of mRNAs encoding RNA binding proteins. In the tutorial, we are going to focus on 7 datasets generated to study the effect of the Pasilla gene inactivation by RNAi knock-down. 4 untreated samples: GSM461176, GSM461177, GSM461178, GSM461182 3 treated samples (Pasilla gene depleted by RNAi): GSM461179, GSM461180, GSM461181 Each sample constitutes a separate biological replicate of the corresponding condition (treated or untreated). Two of the treated and two of the untreated samples are from a paired-end sequencing assay, while the remaining samples are from a single-end sequencing experiment. Thus the following table will be (very) useful in our analysis since each of the 7 datasets are designated with (i) its original ID in GEO (or EBI SRA) (ii) its condition (untreated or treated) and (iii) the sequencing technology used (single read or paired-end). id. in GEO id. in EBI SRA GSM461176_untreat_single SRR031709_untreat_single GSM461177_untreat_paired SRR031714_untreat_paired GSM461178_untreat_paired SRR031716_untreat_paired GSM461179_treat_single SRR031718_treat_single GSM461180_treat_paired SRR031724_treat_paired GSM461181_treat_paired SRR031726_treat_paired GSM461182_untreat_single SRR031728_untreat_single Data upload We will take benefit of this mandatory stage, to review various possibilities to upload datasets in Galaxy. Specifically, we will review two options for uploading the gtf annotations for the Drosophila genome dm6 in a Galaxy history. We will also have a look to a third option that allows specifically to directly transfer FASTQ sequence files from the EBI SRA to a Galaxy history. Transfers of Big Files take time, especially when the Internet connection speed is moderate to low... To avoid consuming too much time on this task, you will have the possibility to import the full set of the 11 FASTQ files in one of your histories, from a data library that has been pre-set in your Galaxy server for this training session. Uploading data from your local computer Download from the Ensembl database the sample Drosophila_melanogaster.BDGP6.95.gtf.gz to your computer. Upload this local file Drosophila_melanogaster.BDGP6.95.gtf.gz to your Galaxy history using the upload/Download Galaxy interface that pops up if you click the upload icone Importing data via links is more efficient and reliable ! The previous strategy is not efficient. Indeed, we can directly transfert the Drosophila_melanogaster.BDGP6.95.gtf.gz from its primary location in the Ensembl database server to your Galaxy History ! Copy its URL below ftp://ftp.ensembl.org/pub/release-95/gtf/drosophila_melanogaster/Drosophila_melanogaster.BDGP6.95.gtf.gz and paste it in the Paste/Fetch data tab of the Galaxy upload interface. In addition, select gtf in the Type menu. Press the start button. Importing data via the EBI SRA ENA SRA Finally there is a tool to specifically fetch fastq sequence file from the EBI SRA to Galaxy The sample GSM461178/SRR031716 was sequenced using a paired-end strategy (both ends of fragments in the library are sequenced, giving rise to 2 read files, a forward read fastq file and a reverse read fastq file). We are going to download the fastq.gz files directly from the EBI SRA using the tool EBI SRA ENA SRA in the Get data tool submenu. Click on the tool EBI SRA ENA SRA (you can select it rapidly using the search bar) In the search box of the EBI SRA website, enter SRR031716 Two categories of results are retrieved, Experiment and Run. What we want to get are the files from the sequencing runs. Thus, click the SRR031716 link in the Run section (1 results found). Click on \"File 1\" in the FASTQ files (Galaxy) Column. You will be switched back to the Galaxy interface, and the download of the SRR031716_1.fastq.gz file will start immediately as a yellow dataset in the history right panel. Without waiting for the complete download of SRR031716_1.fastq.gz, you can repeat the previous steps 1, 2, 3 and 4. Just Click on File 2 instead of File 1 in step 4 Then, to save time, stop the tools (by clicking the small cross) and go to the next section. Importing data from data libraries For collaborative work, Galaxy offers data libraries, where datasets can be stored and available to one or multiple users. This is what we are going to use to import rapidly all the input data you need for this RNAseq analysis. All datasets have been preloaded in the data library named RNAseq . To access this library and import its content in your histories: Click the menu Donn\u00e9es partag\u00e9es ( Shared data ) and select the submenu Biblioth\u00e8que de Donn\u00e9es ( Data libraries ). Navigate to the data library RNAseq Select all datasets Click the To History button and select as Datasets In the pop up window, or create new and type Input data to transfer the datasets in a new history with this name. Click on the green box to navigate to this new history (or click on the main menu analyse data ) and start using these datasets.","title":"Data upload"},{"location":"uploads/#data","text":"The original data is available at NCBI Gene Expression Omnibus (GEO) under accession number GSE18508 . It is also mirrored at the EBI Small Read Archive under the accession number SRP001537 The data was generated through deep Sequencing of mRNA from the Drosophila melanogaster S2-DRSC cells that have been RNAi depleted of mRNAs encoding RNA binding proteins. In the tutorial, we are going to focus on 7 datasets generated to study the effect of the Pasilla gene inactivation by RNAi knock-down. 4 untreated samples: GSM461176, GSM461177, GSM461178, GSM461182 3 treated samples (Pasilla gene depleted by RNAi): GSM461179, GSM461180, GSM461181 Each sample constitutes a separate biological replicate of the corresponding condition (treated or untreated). Two of the treated and two of the untreated samples are from a paired-end sequencing assay, while the remaining samples are from a single-end sequencing experiment. Thus the following table will be (very) useful in our analysis since each of the 7 datasets are designated with (i) its original ID in GEO (or EBI SRA) (ii) its condition (untreated or treated) and (iii) the sequencing technology used (single read or paired-end). id. in GEO id. in EBI SRA GSM461176_untreat_single SRR031709_untreat_single GSM461177_untreat_paired SRR031714_untreat_paired GSM461178_untreat_paired SRR031716_untreat_paired GSM461179_treat_single SRR031718_treat_single GSM461180_treat_paired SRR031724_treat_paired GSM461181_treat_paired SRR031726_treat_paired GSM461182_untreat_single SRR031728_untreat_single","title":"Data"},{"location":"uploads/#data-upload","text":"We will take benefit of this mandatory stage, to review various possibilities to upload datasets in Galaxy. Specifically, we will review two options for uploading the gtf annotations for the Drosophila genome dm6 in a Galaxy history. We will also have a look to a third option that allows specifically to directly transfer FASTQ sequence files from the EBI SRA to a Galaxy history. Transfers of Big Files take time, especially when the Internet connection speed is moderate to low... To avoid consuming too much time on this task, you will have the possibility to import the full set of the 11 FASTQ files in one of your histories, from a data library that has been pre-set in your Galaxy server for this training session.","title":"Data upload"},{"location":"uploads/#uploading-data-from-your-local-computer","text":"Download from the Ensembl database the sample Drosophila_melanogaster.BDGP6.95.gtf.gz to your computer. Upload this local file Drosophila_melanogaster.BDGP6.95.gtf.gz to your Galaxy history using the upload/Download Galaxy interface that pops up if you click the upload icone","title":"Uploading data from your local computer"},{"location":"uploads/#importing-data-via-links-is-more-efficient-and-reliable","text":"The previous strategy is not efficient. Indeed, we can directly transfert the Drosophila_melanogaster.BDGP6.95.gtf.gz from its primary location in the Ensembl database server to your Galaxy History ! Copy its URL below ftp://ftp.ensembl.org/pub/release-95/gtf/drosophila_melanogaster/Drosophila_melanogaster.BDGP6.95.gtf.gz and paste it in the Paste/Fetch data tab of the Galaxy upload interface. In addition, select gtf in the Type menu. Press the start button.","title":"Importing data via links is more efficient and reliable !"},{"location":"uploads/#importing-data-via-the-ebi-sra-ena-sra","text":"Finally there is a tool to specifically fetch fastq sequence file from the EBI SRA to Galaxy The sample GSM461178/SRR031716 was sequenced using a paired-end strategy (both ends of fragments in the library are sequenced, giving rise to 2 read files, a forward read fastq file and a reverse read fastq file). We are going to download the fastq.gz files directly from the EBI SRA using the tool EBI SRA ENA SRA in the Get data tool submenu.","title":"Importing data via the EBI SRA ENA SRA"},{"location":"uploads/#importing-data-from-data-libraries","text":"For collaborative work, Galaxy offers data libraries, where datasets can be stored and available to one or multiple users. This is what we are going to use to import rapidly all the input data you need for this RNAseq analysis. All datasets have been preloaded in the data library named RNAseq . To access this library and import its content in your histories: Click the menu Donn\u00e9es partag\u00e9es ( Shared data ) and select the submenu Biblioth\u00e8que de Donn\u00e9es ( Data libraries ). Navigate to the data library RNAseq Select all datasets Click the To History button and select as Datasets In the pop up window, or create new and type Input data to transfer the datasets in a new history with this name. Click on the green box to navigate to this new history (or click on the main menu analyse data ) and start using these datasets.","title":"Importing data from data libraries"},{"location":"visu_map/","text":"Inspection of the mapping results UCSC genome browser click the ucsc main link as indicated by the orange arrow Zoom to chr4:540,000-560,000 (Chromosome 4 between 540 kb to 560 kb) IGV To use IGV with galaxy you need to have this tool on your computer. (If not you can download IGV from their main site .) Open locally IGV click the IGV local ling as indicated by the red arrow. Zoom to chr4:540,000-560,000 (Chromosome 4 between 540 kb to 560 kb)","title":"Visualisation of read mapping"},{"location":"visu_map/#inspection-of-the-mapping-results","text":"","title":"Inspection of the mapping results"},{"location":"visu_map/#ucsc-genome-browser","text":"click the ucsc main link as indicated by the orange arrow Zoom to chr4:540,000-560,000 (Chromosome 4 between 540 kb to 560 kb)","title":"UCSC genome browser"},{"location":"visu_map/#igv","text":"To use IGV with galaxy you need to have this tool on your computer. (If not you can download IGV from their main site .) Open locally IGV click the IGV local ling as indicated by the red arrow. Zoom to chr4:540,000-560,000 (Chromosome 4 between 540 kb to 560 kb)","title":"IGV"},{"location":"volcano/","text":"Volcano Plot create a volcano plot Select the Volcano Plot create a volcano plot tool with the following parameters: Specify an input file : the DESeq2 result file FDR (adjusted P value) : Column: 7 P value (raw) : Column: 6 Log Fold Change : Column: 3 Labels : Column: 1 Points to label : Significant Only label top most significant : 15 Plot Options : Label Boxes : No Labels for Legend : Down,NotSig,Up Execute You should obtain something like :","title":"Volcano Plot"},{"location":"volcano/#volcano-plot-create-a-volcano-plot","text":"Select the Volcano Plot create a volcano plot tool with the following parameters: Specify an input file : the DESeq2 result file FDR (adjusted P value) : Column: 7 P value (raw) : Column: 6 Log Fold Change : Column: 3 Labels : Column: 1 Points to label : Significant Only label top most significant : 15 Plot Options : Label Boxes : No Labels for Legend : Down,NotSig,Up Execute You should obtain something like :","title":"Volcano Plot create a volcano plot"},{"location":"workflow_intro/","text":"Galaxy Workflows At this point, you should be more familiar with importing and manipulating datasets in Galaxy using tools in single consecutive steps visualising the metadata associated to these steps as well as the results. However, this is only the tip of the Galaxy. Indeed, as you may have noticed, histories can become very complicated with a lot of datasets whose origin and purpose is not so easy to remember after a while (shorter that you may believe). Actually, the best way to preserve an analysis is to get it completely scripted in a computational workflow. This is where you find the Galaxy workflows ! Galaxy workflow can be extracted from an history or built from scratch using the Galaxy workflow editor (Menu worflows ). A workflow can be replayed at any time to regenerate an analysis. Importantly, they can be exported as a .ga file and imported in another Galaxy server. Provided that this new server has the input data and the tools specified by the workflow, the exact same analysis will be generated. Take home message: \"advanced Galaxy users use workflows, to capture their work and make convincing, transparent and re-usable their computational protocols\" In the next and last section, you will test 2 workflows that are available in your Galaxy server and recapitulate most of the analyses you have performed today.","title":"Introduction"},{"location":"workflow_intro/#galaxy-workflows","text":"At this point, you should be more familiar with importing and manipulating datasets in Galaxy using tools in single consecutive steps visualising the metadata associated to these steps as well as the results. However, this is only the tip of the Galaxy. Indeed, as you may have noticed, histories can become very complicated with a lot of datasets whose origin and purpose is not so easy to remember after a while (shorter that you may believe). Actually, the best way to preserve an analysis is to get it completely scripted in a computational workflow. This is where you find the Galaxy workflows ! Galaxy workflow can be extracted from an history or built from scratch using the Galaxy workflow editor (Menu worflows ). A workflow can be replayed at any time to regenerate an analysis. Importantly, they can be exported as a .ga file and imported in another Galaxy server. Provided that this new server has the input data and the tools specified by the workflow, the exact same analysis will be generated. Take home message: \"advanced Galaxy users use workflows, to capture their work and make convincing, transparent and re-usable their computational protocols\" In the next and last section, you will test 2 workflows that are available in your Galaxy server and recapitulate most of the analyses you have performed today.","title":"Galaxy Workflows"},{"location":"workflow_use/","text":"Workflow upload Same as data libraries, you can import workflows, from shared data that has been pre-set in your Galaxy server for this training session. To access these workflows : Click the menu Donn\u00e9es partag\u00e9es ( Shared data ) and select the submenu Workflows . You should see two workflows : paired-data-STAR-RNAseq and paired-data-HISAT2-RNAseq For each workflow, click on the arrow and select Import . Now, you'll be able to see these workflows in the Workflow menu. Running workflows You need to return to our first galaxy history Inputs , to do so : Click the menu Utilisateur and select the submenu Historiques sauvegard\u00e9s . Click on Inputs . Its status is now current history . Prepare inputs These workflows use data collection as inputs, one per condition treat and untreat . Let's create our two data collections ! Click on the checked box. Select all treated datasets in pair ends : GSM461180_1_treat_paired.fastq.gz GSM461181_1_treat_paired.fastq.gz GSM461180_2_treat_paired.fastq.gz GSM461181_2_treat_paired.fastq.gz Then click on the button Pour toute la s\u00e9lection... and Build List of Dataset Pairs . Enter a name for your dataset collection. Name : Treat data pairs. Create list Redo a data collections for untreated datasets. Unchecked the previous datasets. Select all untreated datasets in pair ends : GSM461177_1_untreat_paired.fastq.gz GSM461178_1_untreat_paired.fastq.gz GSM461177_2_untreat_paired.fastq.gz GSM461178_2_untreat_paired.fastq.gz Then click on the button Pour toute la s\u00e9lection... and Build List of Dataset Pairs . Enter a name for your dataset collection. Name : Untreat data pairs. Create list You are now the happy owner of two dataset paired collections ! It's time to test the worflows ! Go to Menu Workflow . For the workflow imported: paired-data-HISAT2-RNAseq , click on the arrow and then Run . History Options Send results to a new history : Yes 1: treated data pairs : Treat data pairs 2:GTF : Drosophila_melanogaster.BDGP6.95.gtf.gz 3: un-treated data pairs : Untreat data pairs Run workflow Redo the same for the workflow imported: paired-data-STAR-RNAseq .","title":"Example"},{"location":"workflow_use/#workflow-upload","text":"Same as data libraries, you can import workflows, from shared data that has been pre-set in your Galaxy server for this training session. To access these workflows : Click the menu Donn\u00e9es partag\u00e9es ( Shared data ) and select the submenu Workflows . You should see two workflows : paired-data-STAR-RNAseq and paired-data-HISAT2-RNAseq For each workflow, click on the arrow and select Import . Now, you'll be able to see these workflows in the Workflow menu.","title":"Workflow upload"},{"location":"workflow_use/#running-workflows","text":"You need to return to our first galaxy history Inputs , to do so : Click the menu Utilisateur and select the submenu Historiques sauvegard\u00e9s . Click on Inputs . Its status is now current history .","title":"Running workflows"},{"location":"workflow_use/#prepare-inputs","text":"These workflows use data collection as inputs, one per condition treat and untreat . Let's create our two data collections ! Click on the checked box. Select all treated datasets in pair ends : GSM461180_1_treat_paired.fastq.gz GSM461181_1_treat_paired.fastq.gz GSM461180_2_treat_paired.fastq.gz GSM461181_2_treat_paired.fastq.gz Then click on the button Pour toute la s\u00e9lection... and Build List of Dataset Pairs . Enter a name for your dataset collection. Name : Treat data pairs. Create list Redo a data collections for untreated datasets. Unchecked the previous datasets. Select all untreated datasets in pair ends : GSM461177_1_untreat_paired.fastq.gz GSM461178_1_untreat_paired.fastq.gz GSM461177_2_untreat_paired.fastq.gz GSM461178_2_untreat_paired.fastq.gz Then click on the button Pour toute la s\u00e9lection... and Build List of Dataset Pairs . Enter a name for your dataset collection. Name : Untreat data pairs. Create list You are now the happy owner of two dataset paired collections ! It's time to test the worflows ! Go to Menu Workflow . For the workflow imported: paired-data-HISAT2-RNAseq , click on the arrow and then Run . History Options Send results to a new history : Yes 1: treated data pairs : Treat data pairs 2:GTF : Drosophila_melanogaster.BDGP6.95.gtf.gz 3: un-treated data pairs : Untreat data pairs Run workflow Redo the same for the workflow imported: paired-data-STAR-RNAseq .","title":"Prepare inputs"}]}